@page "/management/store"
@page "/management/editstore/{param}"
@inject IManagementService ManagementService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager navigate

@if (!activeUser.role.Contains("admin"))
{
    <div class="container-fluid">
        <div class="d-flex align-items-center">
            <h3>User Require Elevation</h3>
        </div>
    </div>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col col-md-12">
                <div class="d-flex flex-column align-items-start">
                    @if (param == null)
                    {
                        <PageTitle>Management - Sync Store</PageTitle>
                        <h3>Store Management</h3>
                        <small><i>Sync Store</i></small>
                    }
                    else
                    {
                        <PageTitle>Management - Edit Store</PageTitle>
                        <h3>Store Management</h3>
                        <small><i>Edit Store</i></small>
                    }
                </div>
            </div>
        </div>

        @if (alertTrigger)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <strong>@alertMessage</strong> @alertBody
                <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick="resetTrigger">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }


        @if (successAlert)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>@alertMessage</strong> @alertBody
                <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick="resetSuccessAlert">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <div class="my-2">

            <button type="button" class="btn btn-sm btn-primary-cus" @onclick="syncStoreData"><span class="oi oi-loop-circular"></span></button>
            @if (syncProgress)
            {
                <span class="spinner-border spinner-border-sm text-danger mx-2"></span>
            }
            
        </div>

        <div class="table-responsive table-wrap">
            <table class="table table-sm table-hover table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Store Code</th>
                        <th scope="col">Store Name</th>
                        <th scope="col">Store Budget</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>

                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>

                </tbody>
            </table>

        </div>

        <br />

        @*
        <!-- Trigger the modal with a button -->
        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Open Modal</button>

        <!-- Modal -->
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close btn btn-default" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        <p>Some text in the modal.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>
        *@

    </div>
}

